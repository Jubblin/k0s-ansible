---

- when: inventory_hostname in groups['controller']
  block:

    - name: Write the k0s config file
      template:
        src: k0s.yaml.j2
        dest: {{ controller_config_dest }}/k0s.yaml

    - name: Copy k0s service file
      register: k0s_controller_service
      template:
        src: k0s-controller.service.j2
        dest: {{ systemd_dest }}/k0s-controller.service
        owner: root
        group: root
        mode: 0755
      notify: Enable and check k0s-controler service

    - name: Wait for k8s apiserver
      wait_for:
        host: localhost
        port: 6443
        timeout: 180

    - name: Create join worker token
      shell: k0s token create --role=worker
      register: join_token_command

    - name: Store join worker join token
      set_fact:
          join_token_worker: "{{ join_token_command.stdout }}"
          key_value: "{{ join_token_command.stdout }}"

    - name: "Add k0s Token to dummy host"
      add_host:
        name:   "join_token_holder"
        token:  "{{ join_token_command.stdout }}"

    - name: "print token"
      debug:
        msg: "k0s join token is: {{ hostvars['join_token_holder']['token'] }}"

    - name: Copy config file to user home directory
      copy:
        src: /var/lib/k0s/pki/admin.conf
        dest: {{ ansible_user }}/k0s-kubeconfig.yml
        remote_src: yes
        owner: "{{ ansible_user }}"
        mode: "u=rw,g=,o="  ### Wenns geht einheitlich "mode" beschreiben. Oben mit octal und hier mit text

    - name: Set controller IP in kubeconfig
      replace:
        path: {{ ansible_user }}/k0s-kubeconfig.yml
        regexp: 'localhost'
        replace: "{{ ansible_host }}"

    - name: Copy kubectl binary to ansible host
      fetch:
        src: "{{ ansible_user }}/k0s-kubeconfig.yml"
        dest: "{{ artifacts_dir }}/k0s-kubeconfig.yml"
        flat: yes
        validate_checksum: no
      become: no
      # run_once: yes
      # when: kubectl_localhost

    - name: "print kubeconfig command"
      debug:
        msg: "To use Cluster: export KUBECONFIG={{ artifacts_dir }}/k0s-kubeconfig.yml"
